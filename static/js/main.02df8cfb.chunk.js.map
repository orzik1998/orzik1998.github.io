{"version":3,"sources":["components/AddForm.js","components/table.jsx","App.js","serviceWorker.js","index.js"],"names":["AddForm","restFetch","update","useState","invent","setInvent","family","setFamily","genus","setGenus","kind","setKind","latitude","setLatitude","longitude","setLongitude","country","setCountry","region","setRegion","area","setArea","additional_info","setAdditionInfo","collectors","setCollectors","detectors","setDetectors","collected","setCollected","detected","setDetected","trigger","modal","closeOnDocumentClick","close","TextField","label","type","value","error","onChange","e","target","multiline","id","InputLabelProps","shrink","Button","onClick","alert","addPlant","variant","color","StyledPopup","styled","Popup","EditableField","permission","changeValue","InfoTable","props","setAdditional_info","photo","setPhoto","viewer","toggleViewer","updateImageURL","url","Object","assign","newPhoto","token","plantId","then","json","result","filename","className","obj","style","textAlign","src","maxHeight","cursor","closeBtnTitle","showImgCount","imgs","isOpen","onClose","openDialogOnClick","containerStyles","width","height","border","count","formats","onUpload","files","reader","FileReader","file","onloadend","readAsDataURL","_handleImageChange","display","alignItems","justifyContent","TableRow","deleted","setDeleted","verticalAlign","split","copyRow","deleteRow","TableComponent","window","confirm","cookies","this","tableData","map","plant","key","colSpan","length","React","Component","startState","collectedStart","collectedEnd","collector","detector","options","method","data","console","log","fetch","headers","body","JSON","stringify","response","LoginComponent","login","setLogin","password","setPassword","cookie","save","path","location","reload","App","setState","table","filterUpdate","state","filterClear","loadAll","remove","isSearchable","placeholder","Boolean","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02df8cfb.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport { TextField, Button } from '@material-ui/core';\r\n\r\nexport default function AddForm({ restFetch, update }) {\r\n    const [invent, setInvent] = useState('');\r\n    const [family, setFamily] = useState('');\r\n    const [genus, setGenus] = useState('');\r\n    const [kind, setKind] = useState('');\r\n    const [latitude, setLatitude] = useState('');\r\n    const [longitude, setLongitude] = useState('');\r\n    const [country, setCountry] = useState('');\r\n    const [region, setRegion] = useState('');\r\n    const [area, setArea] = useState('');\r\n    const [additional_info, setAdditionInfo] = useState('');\r\n    const [collectors, setCollectors] = useState('');\r\n    const [detectors, setDetectors] = useState('');\r\n    const [collected, setCollected] = useState('2017-05-24 10:30');\r\n    const [detected, setDetected] = useState('2017-05-24 10:30');\r\n\r\n    const addPlant = close => {\r\n\r\n        if(!invent || !family || !genus || \r\n            !kind) return alert('Не все поля верно заполнены');\r\n\r\n        restFetch('addPlant', {\r\n            invent, family, genus,\r\n            kind, latitude, longitude,\r\n            country, region, area,\r\n            additional_info, collectors,\r\n            detectors, collected, detected\r\n        });\r\n        update();\r\n        close();\r\n    };\r\n\r\n    return <Popup\r\n        trigger={<button>Добавить растение</button>}\r\n        modal\r\n        closeOnDocumentClick\r\n    >{ close => \r\n        (<><TextField\r\n            label=\"Инвент. номер\"\r\n            type=\"text\"\r\n            value={invent}\r\n            error={!invent}\r\n            onChange={e => setInvent(e.target.value)}\r\n        />\r\n        <br/>\r\n        <TextField \r\n            label=\"Семейство\"\r\n            type=\"text\"\r\n            value={family}\r\n            error={!genus}\r\n            onChange={e => setFamily(e.target.value)}\r\n        />\r\n        <TextField \r\n            label=\"Род\"\r\n            type=\"text\"\r\n            value={genus}\r\n            error={!genus}\r\n            onChange={e => setGenus(e.target.value)}\r\n        />\r\n        <TextField \r\n            label=\"Вид\"\r\n            type=\"text\"\r\n            value={kind}\r\n            error={!kind}\r\n            onChange={e => setKind(e.target.value)}\r\n        />\r\n        <br/>\r\n        <TextField \r\n            label=\"Широта\"\r\n            type=\"text\"\r\n            value={latitude}\r\n            onChange={e => setLatitude(e.target.value)}\r\n        />\r\n        <TextField\r\n            label=\"Долгота\"\r\n            type=\"text\"\r\n            value={longitude}\r\n            onChange={e => setLongitude(e.target.value)}\r\n        />\r\n        <br/>\r\n        <TextField \r\n            label=\"Страна\"\r\n            type=\"text\"\r\n            value={country}\r\n            onChange={e => setCountry(e.target.value)}\r\n        />\r\n        <TextField \r\n            label=\"Регион\"\r\n            type=\"text\"\r\n            value={region}\r\n            onChange={e => setRegion(e.target.value)}\r\n        />\r\n        <TextField\r\n            label=\"Район\"\r\n            type=\"text\"\r\n            value={area}\r\n            onChange={e => setArea(e.target.value)}\r\n        /><br/>\r\n        <TextField\r\n            label=\"Дополнительно\"\r\n            type=\"text\"\r\n            multiline\r\n            value={additional_info}\r\n            onChange={e => setAdditionInfo(e.target.value)}\r\n        />\r\n        <TextField\r\n            label=\"Коллектор(-ы)\"\r\n            type=\"text\"\r\n            multiline\r\n            value={collectors}\r\n            onChange={e => setCollectors(e.target.value)}\r\n        />\r\n        <TextField\r\n            label=\"Определил(-и)\"\r\n            type=\"text\"\r\n            multiline\r\n            value={detectors}\r\n            onChange={e => setDetectors(e.target.value)}\r\n        /><br/>\r\n        <TextField\r\n            id=\"datetime-local\"\r\n            label=\"Собран\"\r\n            type=\"datetime-local\"\r\n            value={collected}\r\n            onChange={e => setCollected(e.target.value)}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            id=\"datetime-local\"\r\n            label=\"Определен\"\r\n            type=\"datetime-local\"\r\n            value={detected}\r\n            onChange={e => setDetected(e.target.value)}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n        />\r\n        <p>\r\n            <Button \r\n                onClick={ () => addPlant(close) }\r\n                variant=\"contained\"\r\n                color=\"primary\">Добавить растение</Button>\r\n        </p>\r\n        </>)}\r\n    </Popup>\r\n}","import React, {useState} from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport Popup from 'reactjs-popup';\r\nimport FilesDragAndDrop from '@yelysei/react-files-drag-and-drop';\r\nimport ImgsViewer from 'react-images-viewer'\r\nimport styled from 'styled-components';\r\nimport PhotoIcon from '@material-ui/icons/Photo';\r\n\r\nconst StyledPopup = styled(Popup)`\r\n  // use your custom style for \".popup-overlay\"\r\n  &-overlay {\r\n   width: 100%;\r\n   overflow-y: scroll;\r\n  }\r\n  // use your custom style for \".popup-content\"\r\n  &-content {\r\n   width: 90% !important;\r\n  }\r\n`;\r\n\r\nconst _handleImageChange = (files, updateImageURL) => {\r\n  let reader = new FileReader();\r\n  let file = files[0];\r\n\r\n  reader.onloadend = () => {\r\n    updateImageURL(reader.result);\r\n  };\r\n\r\n  reader.readAsDataURL(file);\r\n};\r\n\r\nconst EditableField = ({ permission, label, value, changeValue, multiline }) => {\r\n  if(permission) {\r\n    return <TextField \r\n      label={label}\r\n      value={value}\r\n      multiline={multiline}\r\n      onChange={e => changeValue(e.target.value)} \r\n    />\r\n  }\r\n  return `${label}: ${value}`;\r\n}\r\n\r\nconst InfoTable = (props) => {\r\n  const [invent, setInvent] = useState(props.invent);\r\n  const [family, setFamily] = useState(props.family);\r\n  const [genus, setGenus] = useState(props.genus);\r\n  const [kind, setKind] = useState(props.kind);\r\n  const [latitude, setLatitude] = useState(props.latitude);\r\n  const [longitude, setLongitude] = useState(props.longitude);\r\n  const [country, setCountry] = useState(props.country);\r\n  const [region, setRegion] = useState(props.region);\r\n  const [area, setArea] = useState(props.area);\r\n  const [additional_info, setAdditional_info] = useState(props.additional_info);\r\n  const [collectors, setCollectors] = useState(props.collectors);\r\n  const [detectors, setDetectors] = useState(props.detectors);\r\n  const [detected, setDetected] = useState(props.detected);\r\n  const [collected, setCollected] = useState(props.collected);\r\n  const [photo, setPhoto] = useState(props.photo);\r\n\r\n  const [viewer, toggleViewer] = useState(false);\r\n\r\n  const saveThis = () => {\r\n    const obj = {\r\n      invent,\r\n      family,\r\n      genus,\r\n      kind,\r\n      latitude,\r\n      longitude,\r\n      country,\r\n      region,\r\n      area,\r\n      additional_info,\r\n      collectors,\r\n      detectors,\r\n      detected,\r\n      collected\r\n    };\r\n    props.restFetch('updateRow', Object.assign(obj, { token: props.token, plantId: props.id }))\r\n    .then(json => {\r\n      if(json.error) {\r\n        return alert(json.error);\r\n      }\r\n      props.update();\r\n    });\r\n  }\r\n\r\n  const updateImageURL = url => {\r\n    props.restFetch('updateRowImage', Object.assign({ newPhoto: url }, { token: props.token, plantId: props.id }))\r\n    .then(json => {\r\n      if(json.result === 'ok') {\r\n        setPhoto(json.filename);\r\n        \r\n        props.update();\r\n      }\r\n      if(json.error) {\r\n        return alert(json.error);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (<div className=\"modal\">\r\n      <EditableField \r\n          permission={props.token}\r\n          label=\"Инвет. номер\"\r\n          value={invent}\r\n          changeValue={ setInvent } \r\n        />\r\n      <div>\r\n        <EditableField \r\n          permission={props.token}\r\n          label=\"Семейство\"\r\n          value={family}\r\n          changeValue={ setFamily } \r\n        />\r\n        <EditableField \r\n          permission={props.token}\r\n          label=\"Род\"\r\n          value={genus}\r\n          changeValue={ setGenus } \r\n        />\r\n        <EditableField \r\n          permission={props.token}\r\n          label=\"Вид\"\r\n          value={kind}\r\n          changeValue={ setKind } \r\n        />\r\n      </div>\r\n      <div>\r\n        <EditableField \r\n          permission={props.token}\r\n          label=\"Широта\"\r\n          value={latitude}\r\n          changeValue={ setLatitude } \r\n        />\r\n        <EditableField \r\n          permission={props.token}\r\n          label=\"Долгота\"\r\n          value={longitude}\r\n          changeValue={ setLongitude } \r\n        />\r\n      </div>\r\n      <div>\r\n        <EditableField \r\n          permission={props.token}\r\n          label=\"Страна\"\r\n          value={country}\r\n          changeValue={ setCountry } \r\n        />\r\n        <EditableField \r\n          permission={props.token}\r\n          label=\"Регион\"\r\n          value={region}\r\n          changeValue={ setRegion }\r\n        />\r\n        <EditableField \r\n          permission={props.token}\r\n          label=\"Область\"\r\n          value={area}\r\n          changeValue={ setArea } \r\n        />\r\n      </div>\r\n        <EditableField \r\n          permission={props.token}\r\n          label=\"Дополнительно\"\r\n          value={additional_info}\r\n          multiline\r\n          changeValue={ setAdditional_info } \r\n        />\r\n      <div>\r\n        <EditableField \r\n          permission={props.token}\r\n          label=\"Собрал(и)\"\r\n          value={collectors}\r\n          changeValue={ setCollectors } \r\n        />\r\n        <EditableField \r\n          permission={props.token}\r\n          label=\"Определил(и)\"\r\n          value={detectors}\r\n          changeValue={ setDetectors } \r\n        />\r\n        <EditableField \r\n          permission={props.token}\r\n          label=\"Определён\"\r\n          value={detected}\r\n          changeValue={ setDetected } \r\n        />\r\n        <EditableField \r\n          permission={props.token}\r\n          label=\"Собран\"\r\n          value={collected}\r\n          changeValue={ setCollected } \r\n        />\r\n      </div>\r\n      { props.token && <button onClick={saveThis}>Сохранить</button> }\r\n      <hr/>\r\n      { photo === 'none' &&\r\n        <div><center>Фотографии нет</center></div>\r\n      }\r\n      { photo !== 'none' &&\r\n        <>\r\n          <div style={{textAlign: 'center'}}>\r\n            <img \r\n              onClick={() => toggleViewer(true)}\r\n              src={'http://fescobalt.com/botanic/photos/'+photo}\r\n              style={{maxHeight: '400px', cursor: 'pointer'}} />\r\n          </div>\r\n          <ImgsViewer\r\n            closeBtnTitle=\"Закрыть\"\r\n            showImgCount={false}\r\n            imgs={[{ src: 'http://fescobalt.com/botanic/photos/'+photo }]}\r\n            isOpen={viewer}\r\n            onClose={() => toggleViewer(false)}\r\n          />\r\n        </>\r\n      }\r\n      { props.token && <FilesDragAndDrop\r\n        openDialogOnClick\r\n        containerStyles={{\r\n          width: '100%',\r\n          height: '100px',\r\n          border: '1px solid #cccccc',\r\n        }}\r\n        count={3}\r\n        formats={['jpg', 'png', 'svg']}\r\n        onUpload={files => _handleImageChange(files, updateImageURL)}\r\n      >\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          Нажмите здесь или переместите сюда файлы\r\n        </div>\r\n        </FilesDragAndDrop> }\r\n    </div>);\r\n}\r\n\r\nconst TableRow = (props) => {\r\n  const [deleted, setDeleted] = useState(false);\r\n\r\n  if(deleted) return null;\r\n\r\n  return (<tr>\r\n    <td >{props.id}</td>\r\n    <td>{props.photo !== 'none' && <PhotoIcon />} <span style={{verticalAlign: 'top'}}>{props.family} {props.genus}</span></td>\r\n    <td>{props.collected.split(' ')[0]}</td>\r\n    <td>{props.collectors}</td>\r\n    <td>{props.detectors}</td>\r\n    <td>\r\n      <StyledPopup\r\n        trigger={<button className=\"button\"><InfoIcon /></button>}\r\n        modal\r\n        closeOnDocumentClick\r\n      >\r\n        <InfoTable {...props} />\r\n      </StyledPopup>\r\n      {props.token && <>\r\n          <button className=\"blue m-lf\" onClick={() => {\r\n            props.copyRow(props.id);\r\n          }}>\r\n            <FileCopyIcon />\r\n          </button>\r\n          <button onClick={() => {\r\n            props.deleteRow(props.id)\r\n            setDeleted(true);\r\n          }} className=\"red m-lf\"><DeleteIcon className=\"fa fa-plus-circle\" /></button>\r\n      </>}\r\n    </td>\r\n  </tr>);\r\n};\r\n\r\n\r\n\r\nclass TableComponent extends React.Component {\r\n  deleteRow = id => {\r\n    if(window.confirm('Действительно хотите удалить это растение?')) {\r\n      this.props.restFetch('deleteRow', { plantId: id, token: this.props.cookies.token })\r\n      .then(json => {\r\n        if(json.error) {\r\n          return alert('Ошибка: ' + json.error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  copyRow = id => {\r\n    if(window.confirm('Вы уверены, что хотите копировать данные?')) {\r\n      this.props.restFetch('copyRow', { plantId: id, token: this.props.cookies.token })\r\n      .then(json => {\r\n        if(json.error) {\r\n          return alert(json.error);\r\n        }\r\n        this.props.update();\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (<div className=\"table-container\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Код образца</th>\r\n            <th>Вид</th>\r\n            <th>Дата сбора</th>\r\n            <th>Коллектор(-ы)</th>\r\n            <th>Определил(-и)</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          { this.props.tableData !== null &&\r\n              this.props.tableData.map( plant => <TableRow \r\n                key={plant.id}\r\n                deleteRow={this.deleteRow}\r\n                token={this.props.cookies.token} \r\n                copyRow={this.copyRow}\r\n                restFetch={this.props.restFetch}\r\n                update={this.props.update}\r\n                {...plant} /> )\r\n          }\r\n          { this.props.tableData === null &&\r\n            <tr><td colSpan=\"5\"><center>Данные загружаются...</center></td></tr>\r\n          }\r\n          { this.props.tableData !== null && \r\n            this.props.tableData.length === 0 &&\r\n            <tr><td colSpan=\"5\"><center>Ничего не найдено</center></td></tr>\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>);\r\n  }\r\n}\r\n\r\nexport default TableComponent;\r\n","import React, {useState} from 'react';\nimport cookie from 'react-cookies';\nimport Select from 'react-select';\nimport Popup from 'reactjs-popup';\nimport AddForm from './components/AddForm';\nimport './App.css';\nimport Table from './components/table.jsx';\n\nimport { TextField } from '@material-ui/core';\n\n\n\nconst startState = {\n  family: '',\n  genus: '',\n  kind: '',\n  country: '',\n  region: '',\n  area: '',\n  collectedStart: '',\n  collectedEnd: '',\n  collector: '',\n  detector: '',\n\n  tableData: null,\n  options: {\n    family: [],\n    genus: [],\n    kind: [],\n    country: [],\n    region: [],\n    area: [],\n  }\n};\n\n\nfunction restFetch(method, data = {}) {\n  console.log(method);\n  return fetch(\"http:\\/\\/fescobalt.com/botanic/rest.php\" + '?method=' + method, {\n      method: 'POST',\n      headers: {\n          'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n  }).then(response => response.json());\n}\n\nconst LoginComponent = () => {\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  return <div>\n    <h2>Вам необходимо войти</h2>\n    <p>\n      <TextField \n        label=\"Логин\" \n        value={login} \n        onChange={e => setLogin(e.target.value)}/>\n    </p>\n    <p>\n      <TextField \n        label=\"Пароль\"\n        value={password}\n        onChange={e => setPassword(e.target.value)}/>\n    </p>\n    <button variant=\"outlined\" onClick={() => {\n      restFetch('makeAuth', { login, password })\n      .then(json => {\n        if(json.error) {\n          return alert(json.error);\n        }\n        cookie.save('token', json.result.token, { path: '/'});\n        window.location.reload();\n      })\n    }}>Войти</button>\n  </div>;\n}\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    restFetch('getTypes')\n    .then(json => {\n      this.setState({ options: json});\n    });\n\n    restFetch('getTable', startState)\n    .then(json => this.setState({ tableData: json.table }));\n  }\n\n  update = () => {\n    restFetch('getTable', startState)\n    .then(json => this.setState({ tableData: json.table }));\n  }\n\n  filterUpdate = () => {\n    restFetch('getTable', this.state)\n    .then(json => this.setState({ tableData: json.table }));\n  };\n\n  filterClear = () => {\n    this.setState({\n      family: '',\n      genus: '',\n      kind: '',\n      country: '',\n      region: '',\n      area: '',\n      collectedStart: '',\n      collectedEnd: '',\n      collector: '',\n      detector: ''\n    }, () => this.filterUpdate());\n\n  }\n\n  componentWillMount() {\n    this.state = Object.assign(startState, { cookies: cookie.loadAll() });\n  }\n\n  render() {\n    return (<>\n      <div className=\"buttons-block\">\n        { this.state.cookies.token && \n          <div>\n            <button onClick={ () => { \n              cookie.remove('token', { path: '/'});\n              window.location.reload(); \n            }}>Выйти</button>\n          </div>\n        }\n        { !this.state.cookies.token &&\n          <Popup\n            trigger={<button>Авторизироваться</button>}\n            modal\n            closeOnDocumentClick\n          >\n            <LoginComponent />\n          </Popup>          \n        }\n        <h2>Фильтр значений</h2>\n        <div className=\"filters\">\n          <div className=\"selector\">\n            <div>Семейство</div>\n            <Select\n              value={this.state.family}\n              onChange={(e) => this.setState({ family: e })}\n              isSearchable\n              placeholder=\"Выберите вариант\"\n              options={this.state.options.family} />\n          </div>\n          <div className=\"selector\">\n            <div>Род</div>\n            <Select \n              value={this.state.genus}\n              onChange={(e) => this.setState({ genus: e })}\n              isSearchable\n              placeholder=\"Выберите вариант\"\n              options={this.state.options.genus} />\n          </div>\n          <div className=\"selector\">\n            <div>Вид</div>\n            <Select \n              value={this.state.kind}\n              onChange={(e) => this.setState({ kind: e })}\n              isSearchable\n              placeholder=\"Выберите вариант\"\n              options={this.state.options.kind} />\n          </div>\n        </div>\n\n        <br/>\n\n        <div className=\"selector\">\n          <div>Страна</div>\n          <Select \n              value={this.state.country}\n              onChange={(e) => this.setState({ country: e })}\n              isSearchable\n              placeholder=\"Выберите вариант\"\n              options={this.state.options.country} />\n        </div>\n        <div className=\"selector\">\n          <div>Регион</div>\n          <Select \n              value={this.state.region}\n              onChange={(e) => this.setState({ region: e })}\n              isSearchable\n              placeholder=\"Выберите вариант\"\n              options={this.state.options.region} />\n        </div>\n        <div className=\"selector\">\n          <div>Район</div>\n          <Select \n              value={this.state.area}\n              onChange={(e) => this.setState({ area: e })}\n              isSearchable\n              placeholder=\"Выберите вариант\"\n              options={this.state.options.area} />\n        </div>\n        <br/>\n        <div className=\"selector\">\n          <div>Дата сбора (начало)</div>\n          <input \n            type=\"date\" \n            onChange={ (e) => this.setState({collectedStart: e.target.value }) }\n            value={this.state.collectedStart} />\n        </div>\n        <div className=\"selector\">\n          <div>Дата сбора (конец)</div>\n          <input \n            type=\"date\" \n            onChange={ (e) => this.setState({collectedEnd: e.target.value }) }\n            value={this.state.collectedEnd} />\n        </div>\n        <br/>\n        <div className=\"selector\">\n          <div>Определил(-и)</div>\n          <input \n            type=\"text\"\n            value={this.state.detector}\n            onChange={(e) => this.setState({ detector: e.target.value }) } />\n        </div>\n        <div className=\"selector\">\n          <div>Собрал(-и)</div>\n          <input \n            type=\"text\"\n            value={this.state.collector}\n            onChange={(e) => this.setState({collector: e.target.value }) } />\n        </div>\n\n        <div className=\"filter-actions\">\n          <button onClick={ this.filterUpdate }>Поиск</button>\n          <button onClick={ this.filterClear }>Очистить фильтр</button>\n        { this.state.cookies.token && <AddForm restFetch={restFetch} update={this.update}/> }\n        </div>\n      </div>\n      <Table tableData={this.state.tableData} cookies={this.state.cookies} update={this.update} restFetch={restFetch}/>\n    </>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}